group 'in.ashwanik'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    ext {
        slf4jVersion = '1.7.25'
        logbackVersion = '1.2.3'
        junitVersion = '4.12'
        assertjVersion = '3.6.1'
        mockitVersion = '2.3.11'
        mockitInlineVersion = '2.10.0'
        jacocoToolVersion = '0.7.5.201505241946'

    }
    repositories {
        mavenCentral()
        jcenter()
    }
}

repositories {
    mavenCentral()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"

    testCompile group: 'org.assertj', name: 'assertj-core', version: "$assertjVersion"
    testCompile group: 'org.mockito', name: 'mockito-core', version: "$mockitVersion"
    testCompile group: 'org.mockito', name: 'mockito-inline', version: "$mockitInlineVersion"
    testCompile group: 'junit', name: 'junit', version: "$junitVersion"
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: "1.17.1"
}

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from configurations.compile
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'in.ashwanik.clgame.Application'
        )
    }
}

build.dependsOn copyToLib

jacoco {
    toolVersion = jacocoToolVersion
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = false
        csv.enabled = false
        html.destination "${project.projectDir}/reports/jacoco"
    }
}

//test.finalizedBy jacocoTestReport